filter {
    if [type] == "lancache" {

        # ACCESS LOG
        if [source] =~ "access" {
            mutate { replace => { type => "lancache-access" } }
 
            # Extract basic access log fields
            grok {
                match => { "message" => "\[%{HTTPDATE:timestamp}\] %{IPORHOST:client_ip} %{WORD:http_verb} \"%{URIPATH:url_path}%{URIPARAM:url_querystring}?\" %{NUMBER:response_code} (?:%{NUMBER:bytes}|-) %{WORD:cache_status} %{HOSTNAME:upstream_server} (?:%{NUMBER:upstream_status}|-) (?:%{NUMBER:upstream_response_time}|-) %{QUOTEDSTRING:user_agent}" }
            }
            mutate { convert => { "bytes" => "integer" } }
 
        # ERROR LOG
        } else if [source] =~ "error" {
            mutate { replace => { type => "lancache-error" } }
 
        # UNKNOWN LOG
        } else {
            mutate { replace => { type => "lancache-unknown" } }
        }

        # STEAM
        if [source] =~ "steam" {
            mutate { replace => { upstream => "steam" } }
            if [type] == "lancache-access" {
 
                # STEAM ID
                if [url_querystring] =~ "sid=" {
                    grok {
                      match => { "url_querystring" => "sid=%{INT:steam_id_3}" }
                    }
                }

                # DEPOT ID
                if [url_path] =~ "^\/depot" {
                    grok {
                        match => { "url_path" => "/depot/%{INT:steam_depot_id}/" }
                    }
 
                    # CHUNK ID
                    if [url_path] =~ "^\/depot\/\d*\/chunk\/" {
                        grok {
                            match => { "url_path" => "chunk/%{BASE16NUM:steam_chunk_id}"}
                        }
                    }
 
                    # MANIFEST ID
                    if [url_path] =~ "^\/depot\/\d*\/manifest\/" {
                        grok {
                            match => { "url_path" => "manifest/%{BASE16NUM:steam_manifest_id}"}
                        }
                    }
                }
            }
 
        # BLIZZARD
        } else if [source] =~ "blizzard" {
            mutate { replace => { upstream => "blizzard" } }
 
        # RIOT
        } else if [source] =~ "riot" {
            mutate { replace => { upstream => "riot" } }
 
        # WINUPDATE
        } else if [source] =~ "winupdate" {
            mutate { replace => { upstream => "winupdate" } }

        # SONY
        } else if [source] =~ "sony" {
            mutate { replace => { upstream => "sony" } }
 
        # UNKNOWN
        } else {
            mutate { replace => { upstream => "unknown" } }
        }
    }
}
